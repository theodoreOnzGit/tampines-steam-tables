
const SUBREGION_2A_BACK_COEFFS_PS: [[f64; 3]; 46] = [
    [-1.5, -24.0, -0.392_359_838_619_84e6],
    [-1.5, -23.0, 0.515_265_738_272_70e6],
    [-1.5, -19.0, 0.404_824_431_610_48e5],
    [-1.5, -13.0, -0.321_937_909_239_02e3],
    [-1.5, -11.0, 0.969_614_242_186_94e2],
    [-1.5, -10.0, -0.228_678_463_717_73e2],
    [-1.25, -19.0, -0.449_429_141_243_57e6],
    [-1.25, -15.0, -0.501_183_360_201_66e4],
    [-1.25, -6.0, 0.356_844_635_600_15],
    [-1.0, -26.0, 0.442_353_358_481_90e5],
    [-1.0, -21.0, -0.136_733_888_117_08e5],
    [-1.0, -17.0, 0.421_632_602_078_64e6],
    [-1.0, -16.0, 0.225_169_258_374_75e5],
    [-1.0, -9.0, 0.474_421_448_656_46e3],
    [-1.0, -8.0, -0.149_311_307_976_47e3],
    [-0.75, -15.0, -0.197_811_263_204_52e6],
    [-0.75, -14.0, -0.235_543_994_707_60e5],
    [-0.5, -26.0, -0.190_706_163_020_76e5],
    [-0.5, -13.0, 0.553_756_698_831_64e5],
    [-0.5, -9.0, 0.382_936_914_373_63e4],
    [-0.5, -7.0, -0.603_918_605_805_67e3],
    [-0.25, -27.0, 0.193_631_026_203_31e4],
    [-0.25, -25.0, 0.426_606_436_986_10e4],
    [-0.25, -11.0, -0.597_806_388_727_18e4],
    [-0.25, -6.0, -0.704_014_639_268_62e3],
    [0.25, 1.0, 0.338_367_841_075_53e3],
    [0.25, 4.0, 0.208_627_866_351_87e2],
    [0.25, 8.0, 0.338_341_726_561_96e-1],
    [0.25, 11.0, -0.431_244_284_148_93e-4],
    [0.5, 0.0, 0.166_537_913_564_12e3],
    [0.5, 1.0, -0.139_862_920_558_98e3],
    [0.5, 5.0, -0.788_495_479_998_72],
    [0.5, 6.0, 0.721_324_117_538_72e-1],
    [0.5, 10.0, -0.597_548_393_982_83e-2],
    [0.5, 14.0, -0.121_413_589_539_04e-4],
    [0.5, 16.0, 0.232_270_967_338_71e-6],
    [0.75, 0.0, -0.105_384_635_661_94e2],
    [0.75, 4.0, 0.207_189_254_965_02e1],
    [0.75, 9.0, -0.721_931_552_604_27e-1],
    [0.75, 17.0, 0.207_498_870_811_20e-6],
    [1.0, 7.0, -0.183_406_579_113_79e-1],
    [1.0, 18.0, 0.290_362_723_486_96e-6],
    [1.25, 3.0, 0.210_375_278_936_19],
    [1.25, 15.0, 0.256_812_397_299_99e-3],
    [1.5, 5.0, -0.127_990_029_337_81e-1],
    [1.5, 18.0, -0.821_981_026_520_18e-5],
];

use uom::si::{f64::*, pressure::megapascal, ratio::ratio, specific_heat_capacity::kilojoule_per_kilogram_kelvin, thermodynamic_temperature::kelvin};
pub(crate) fn t_ps_2a(p: Pressure, s: SpecificHeatCapacity) -> ThermodynamicTemperature{
    let p_ref = Pressure::new::<megapascal>(1.0);
    let s_ref = SpecificHeatCapacity::new::<kilojoule_per_kilogram_kelvin>(2.0);
    let t_ref = ThermodynamicTemperature::new::<kelvin>(1.0);

    let pi: f64 = (p/p_ref).get::<ratio>();
    let sigma: f64 = (s/s_ref).get::<ratio>();

    let mut theta: f64 = 0.0;

    for coeffs in SUBREGION_2A_BACK_COEFFS_PS {
        let ii = coeffs[0];
        let ji = coeffs[1];
        let ni = coeffs[2];

        theta += ni * pi.powf(ii) * (sigma - 2.0).powf(ji);
    };

    return theta * t_ref;

}
