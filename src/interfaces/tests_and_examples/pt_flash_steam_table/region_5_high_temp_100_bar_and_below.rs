use uom::si::{available_energy::kilojoule_per_kilogram, temperature_interval};
use uom::si::pressure::bar;
use uom::si::f64::*;
use uom::si::ratio::ratio;
use uom::si::specific_heat_capacity::kilojoule_per_kilogram_kelvin;
use uom::si::specific_volume::cubic_meter_per_kilogram;
use uom::si::thermodynamic_temperature::degree_celsius;

use crate::{interfaces::functional_programming::{ph_flash_eqm::x_ph_flash, pt_flash_eqm::{cp_tp_eqm_two_phase, h_tp_eqm_two_phase, kappa_tp_eqm_two_phase, s_tp_eqm_two_phase, v_tp_eqm_two_phase}}, region_4_vap_liq_equilibrium::sat_temp_4};

#[test]
pub fn single_phase_table_0_00611_bar(){

    let steam_table: Vec<[f64; 7]> =
        vec![
        [800.0,0.006112127,810.333,4160.66,11.921,2.3423,1.2454],
        [820.0,0.006112127,825.435,4207.69,11.964,2.3573,1.2435],
        [840.0,0.006112127,840.538,4254.97,12.007,2.3707,1.2417],
        [860.0,0.006112127,855.64,4302.52,12.05,2.3841,1.2401],
        [880.0,0.006112127,870.742,4350.33,12.091,2.3975,1.2384],
        [900.0,0.006112127,885.844,4398.42,12.133,2.4109,1.2368],
        [920.0,0.006112127,900.946,4446.77,12.174,2.4243,1.2351],
        [940.0,0.006112127,916.048,4495.39,12.214,2.4376,1.2336],
        [960.0,0.006112127,931.15,4544.27,12.254,2.4508,1.232],
        [980.0,0.006112127,946.252,4593.42,12.294,2.4639,1.2305],
        [1000.0,0.006112127,961.354,4642.82,12.333,2.4769,1.229],
        [1020.0,0.006112127,976.456,4692.49,12.371,2.4898,1.2275],
        [1040.0,0.006112127,991.558,4742.42,12.41,2.5025,1.2261],
        [1060.0,0.006112127,1006.66,4792.59,12.448,2.5152,1.2247],
        [1080.0,0.006112127,1021.76,4843.02,12.485,2.5276,1.2234],
        [1100.0,0.006112127,1036.86,4893.7,12.522,2.54,1.2221],
        [1120.0,0.006112127,1051.97,4944.62,12.559,2.5521,1.2208],
        [1140.0,0.006112127,1067.07,4995.78,12.596,2.5641,1.2195],
        [1160.0,0.006112127,1082.17,5047.18,12.632,2.5759,1.2183],
        [1180.0,0.006112127,1097.27,5098.82,12.668,2.5876,1.2171],
        [1200.0,0.006112127,1112.37,5150.68,12.703,2.5991,1.2159],
        [1220.0,0.006112127,1127.48,5202.78,12.738,2.6104,1.2148],
        [1240.0,0.006112127,1142.58,5255.1,12.773,2.6215,1.2137],
        [1260.0,0.006112127,1157.68,5307.64,12.807,2.6325,1.2126],
        [1280.0,0.006112127,1172.78,5360.4,12.842,2.6432,1.2115],
        [1300.0,0.006112127,1187.88,5413.37,12.876,2.6538,1.2105],
        [1320.0,0.006112127,1202.99,5466.55,12.909,2.6642,1.2095],
        [1340.0,0.006112127,1218.09,5519.93,12.942,2.6745,1.2086],
        [1360.0,0.006112127,1233.19,5573.52,12.975,2.6845,1.2076],
        [1380.0,0.006112127,1248.29,5627.31,13.008,2.6944,1.2067],
        [1400.0,0.006112127,1263.39,5681.3,13.041,2.7041,1.2058],
        [1420.0,0.006112127,1278.5,5735.48,13.073,2.7136,1.2049],
        [1440.0,0.006112127,1293.6,5789.84,13.105,2.723,1.2041],
        [1460.0,0.006112127,1308.7,5844.39,13.136,2.7322,1.2033],
        [1480.0,0.006112127,1323.8,5899.13,13.168,2.7412,1.2025],
        [1500.0,0.006112127,1338.9,5954.04,13.199,2.7501,1.2017],
        [1550.0,0.006112127,1376.66,6092.08,13.276,2.7715,1.1998],
        [1600.0,0.006112127,1414.41,6231.18,13.351,2.7921,1.198],
        [1650.0,0.006112127,1452.17,6371.27,13.425,2.8117,1.1964],
        [1700.0,0.006112127,1489.92,6512.33,13.497,2.8305,1.1948],
        [1750.0,0.006112127,1527.68,6654.32,13.568,2.8486,1.1933],
        [1800.0,0.006112127,1565.43,6797.19,13.638,2.8661,1.1919],
        [1850.0,0.006112127,1603.19,6940.91,13.707,2.8829,1.1906],
        [1900.0,0.006112127,1640.94,7085.47,13.774,2.8992,1.1893],
        [1950.0,0.006112127,1678.7,7230.83,13.84,2.9152,1.1881],
        [2000.0,0.006112127,1716.45,7376.98,13.905,2.9307,1.1869],

        ];

        for dataset in steam_table {
            let t_deg_c = dataset[0];
            let p_bar = dataset[1];
            let v_m3_per_kg = dataset[2];
            let h_kj_per_kg = dataset[3];
            let s_kj_per_kg_k = dataset[4];
            let cp_kj_per_kg_k = dataset[5];
            let kappa_dimensionless = dataset[6];
            assert_pt_flash_high_temp(t_deg_c, p_bar, v_m3_per_kg, h_kj_per_kg, 
                s_kj_per_kg_k, cp_kj_per_kg_k, kappa_dimensionless, 
                );
        }

}

#[test]
pub fn single_phase_table_0_01_bar(){

    let steam_table: Vec<[f64; 7]> =
        vec![
        [800.0,0.01,495.286,4160.66,11.694,2.3423,1.2454],
        [820.0,0.01,504.516,4207.69,11.737,2.3573,1.2435],
        [840.0,0.01,513.747,4254.97,11.78,2.3707,1.2417],
        [860.0,0.01,522.977,4302.51,11.822,2.3841,1.2401],
        [880.0,0.01,532.208,4350.33,11.864,2.3975,1.2384],
        [900.0,0.01,541.439,4398.42,11.906,2.4109,1.2368],
        [920.0,0.01,550.669,4446.77,11.946,2.4243,1.2351],
        [940.0,0.01,559.9,4495.39,11.987,2.4376,1.2336],
        [960.0,0.01,569.13,4544.27,12.027,2.4508,1.232],
        [980.0,0.01,578.361,4593.42,12.066,2.4639,1.2305],
        [1000.0,0.01,587.591,4642.82,12.106,2.4769,1.229],
        [1020.0,0.01,596.822,4692.49,12.144,2.4898,1.2275],
        [1040.0,0.01,606.053,4742.41,12.183,2.5025,1.2261],
        [1060.0,0.01,615.283,4792.59,12.22,2.5152,1.2247],
        [1080.0,0.01,624.514,4843.02,12.258,2.5276,1.2234],
        [1100.0,0.01,633.744,4893.7,12.295,2.54,1.2221],
        [1120.0,0.01,642.975,4944.62,12.332,2.5521,1.2208],
        [1140.0,0.01,652.205,4995.78,12.368,2.5641,1.2195],
        [1160.0,0.01,661.436,5047.18,12.405,2.5759,1.2183],
        [1180.0,0.01,670.666,5098.82,12.44,2.5876,1.2171],
        [1200.0,0.01,679.897,5150.68,12.476,2.5991,1.2159],
        [1220.0,0.01,689.128,5202.78,12.511,2.6104,1.2148],
        [1240.0,0.01,698.358,5255.1,12.546,2.6215,1.2137],
        [1260.0,0.01,707.589,5307.64,12.58,2.6325,1.2126],
        [1280.0,0.01,716.819,5360.4,12.614,2.6432,1.2115],
        [1300.0,0.01,726.05,5413.37,12.648,2.6538,1.2105],
        [1320.0,0.01,735.28,5466.55,12.682,2.6642,1.2095],
        [1340.0,0.01,744.511,5519.93,12.715,2.6745,1.2086],
        [1360.0,0.01,753.741,5573.52,12.748,2.6845,1.2076],
        [1380.0,0.01,762.972,5627.31,12.781,2.6944,1.2067],
        [1400.0,0.01,772.202,5681.3,12.813,2.7041,1.2058],
        [1420.0,0.01,781.433,5735.48,12.846,2.7136,1.2049],
        [1440.0,0.01,790.663,5789.84,12.878,2.723,1.2041],
        [1460.0,0.01,799.894,5844.39,12.909,2.7322,1.2033],
        [1480.0,0.01,809.125,5899.13,12.941,2.7412,1.2025],
        [1500.0,0.01,818.355,5954.04,12.972,2.7501,1.2017],
        [1550.0,0.01,841.431,6092.08,13.048,2.7715,1.1998],
        [1600.0,0.01,864.508,6231.18,13.124,2.7921,1.198],
        [1650.0,0.01,887.584,6371.27,13.198,2.8117,1.1964],
        [1700.0,0.01,910.66,6512.33,13.27,2.8305,1.1948],
        [1750.0,0.01,933.737,6654.32,13.341,2.8486,1.1933],
        [1800.0,0.01,956.813,6797.19,13.411,2.8661,1.1919],
        [1850.0,0.01,979.889,6940.91,13.479,2.8829,1.1906],
        [1900.0,0.01,1002.966,7085.47,13.547,2.8992,1.1893],
        [1950.0,0.01,1026.042,7230.83,13.613,2.9152,1.1881],
        [2000.0,0.01,1049.118,7376.98,13.678,2.9307,1.1869],


        ];

        for dataset in steam_table {
            let t_deg_c = dataset[0];
            let p_bar = dataset[1];
            let v_m3_per_kg = dataset[2];
            let h_kj_per_kg = dataset[3];
            let s_kj_per_kg_k = dataset[4];
            let cp_kj_per_kg_k = dataset[5];
            let kappa_dimensionless = dataset[6];
            assert_pt_flash_high_temp(t_deg_c, p_bar, v_m3_per_kg, h_kj_per_kg, 
                s_kj_per_kg_k, cp_kj_per_kg_k, kappa_dimensionless, 
                );
        }

}

#[test]
pub fn single_phase_table_0_1_bar(){

    let steam_table: Vec<[f64; 7]> =
        vec![


        [800.0,0.1,49.5278,4160.62,10.631,2.3424,1.2454],
        [820.0,0.1,50.4509,4207.65,10.675,2.3573,1.2435],
        [840.0,0.1,51.374,4254.93,10.717,2.3707,1.2418],
        [860.0,0.1,52.2971,4302.48,10.76,2.3842,1.2401],
        [880.0,0.1,53.2202,4350.3,10.802,2.3976,1.2384],
        [900.0,0.1,54.1433,4398.38,10.843,2.411,1.2368],
        [920.0,0.1,55.0664,4446.74,10.884,2.4243,1.2352],
        [940.0,0.1,55.9895,4495.36,10.924,2.4376,1.2336],
        [960.0,0.1,56.9126,4544.24,10.964,2.4508,1.232],
        [980.0,0.1,57.8357,4593.39,11.004,2.4639,1.2305],
        [1000.0,0.1,58.7588,4642.8,11.043,2.477,1.229],
        [1020.0,0.1,59.6819,4692.47,11.082,2.4898,1.2276],
        [1040.0,0.1,60.605,4742.39,11.12,2.5026,1.2261],
        [1060.0,0.1,61.5281,4792.57,11.158,2.5152,1.2247],
        [1080.0,0.1,62.4512,4843.0,11.195,2.5277,1.2234],
        [1100.0,0.1,63.3742,4893.67,11.232,2.54,1.2221],
        [1120.0,0.1,64.2973,4944.6,11.269,2.5522,1.2208],
        [1140.0,0.1,65.2204,4995.76,11.306,2.5642,1.2195],
        [1160.0,0.1,66.1435,5047.16,11.342,2.576,1.2183],
        [1180.0,0.1,67.0666,5098.8,11.378,2.5876,1.2171],
        [1200.0,0.1,67.9896,5150.67,11.413,2.5991,1.2159],
        [1220.0,0.1,68.9127,5202.76,11.448,2.6104,1.2148],
        [1240.0,0.1,69.8358,5255.08,11.483,2.6215,1.2137],
        [1260.0,0.1,70.7589,5307.62,11.518,2.6325,1.2126],
        [1280.0,0.1,71.6819,5360.38,11.552,2.6433,1.2116],
        [1300.0,0.1,72.605,5413.35,11.586,2.6538,1.2105],
        [1320.0,0.1,73.5281,5466.53,11.619,2.6643,1.2095],
        [1340.0,0.1,74.4512,5519.92,11.652,2.6745,1.2086],
        [1360.0,0.1,75.3742,5573.51,11.686,2.6845,1.2076],
        [1380.0,0.1,76.2973,5627.3,11.718,2.6944,1.2067],
        [1400.0,0.1,77.2204,5681.29,11.751,2.7041,1.2058],
        [1420.0,0.1,78.1434,5735.46,11.783,2.7136,1.2049],
        [1440.0,0.1,79.0665,5789.83,11.815,2.723,1.2041],
        [1460.0,0.1,79.9896,5844.38,11.846,2.7322,1.2033],
        [1480.0,0.1,80.9126,5899.12,11.878,2.7412,1.2025],
        [1500.0,0.1,81.8357,5954.03,11.909,2.7501,1.2017],
        [1550.0,0.1,84.1434,6092.08,11.986,2.7715,1.1998],
        [1600.0,0.1,86.451,6231.17,12.061,2.7921,1.198],
        [1650.0,0.1,88.7587,6371.27,12.135,2.8117,1.1964],
        [1700.0,0.1,91.0663,6512.33,12.207,2.8306,1.1948],
        [1750.0,0.1,93.374,6654.31,12.278,2.8487,1.1933],
        [1800.0,0.1,95.6816,6797.18,12.348,2.8661,1.1919],
        [1850.0,0.1,97.9893,6940.91,12.417,2.8829,1.1906],
        [1900.0,0.1,100.297,7085.47,12.484,2.8993,1.1893],
        [1950.0,0.1,102.605,7230.83,12.55,2.9152,1.1881],
        [2000.0,0.1,104.912,7376.98,12.615,2.9307,1.1869],

        ];

        for dataset in steam_table {
            let t_deg_c = dataset[0];
            let p_bar = dataset[1];
            let v_m3_per_kg = dataset[2];
            let h_kj_per_kg = dataset[3];
            let s_kj_per_kg_k = dataset[4];
            let cp_kj_per_kg_k = dataset[5];
            let kappa_dimensionless = dataset[6];
            assert_pt_flash_high_temp(t_deg_c, p_bar, v_m3_per_kg, h_kj_per_kg, 
                s_kj_per_kg_k, cp_kj_per_kg_k, kappa_dimensionless, 
                );
        }

}
#[test]
pub fn single_phase_table_1_bar(){

    let steam_table: Vec<[f64; 7]> =
        vec![
        [800.0,1.0,4.95196,4160.21,9.5681,2.3434,1.2455],
        [820.0,1.0,5.04434,4207.26,9.6115,2.3582,1.2435],
        [840.0,1.0,5.1367,4254.56,9.6544,2.3716,1.2418],
        [860.0,1.0,5.22907,4302.12,9.6968,2.385,1.2401],
        [880.0,1.0,5.32143,4349.96,9.7386,2.3983,1.2385],
        [900.0,1.0,5.41379,4398.06,9.78,2.4117,1.2368],
        [920.0,1.0,5.50614,4446.42,9.8208,2.425,1.2352],
        [940.0,1.0,5.5985,4495.06,9.8613,2.4383,1.2337],
        [960.0,1.0,5.69085,4543.95,9.9012,2.4515,1.2321],
        [980.0,1.0,5.78319,4593.11,9.9408,2.4645,1.2306],
        [1000.0,1.0,5.87554,4642.54,9.9799,2.4775,1.2291],
        [1020.0,1.0,5.96788,4692.21,10.019,2.4904,1.2276],
        [1040.0,1.0,6.06023,4742.15,10.057,2.5031,1.2262],
        [1060.0,1.0,6.15257,4792.34,10.095,2.5157,1.2248],
        [1080.0,1.0,6.24491,4842.78,10.132,2.5281,1.2235],
        [1100.0,1.0,6.33724,4893.46,10.17,2.5404,1.2221],
        [1120.0,1.0,6.42958,4944.39,10.206,2.5526,1.2209],
        [1140.0,1.0,6.52191,4995.56,10.243,2.5646,1.2196],
        [1160.0,1.0,6.61425,5046.97,10.279,2.5764,1.2184],
        [1180.0,1.0,6.70658,5098.62,10.315,2.588,1.2172],
        [1200.0,1.0,6.79891,5150.49,10.35,2.5995,1.216],
        [1220.0,1.0,6.89124,5202.6,10.385,2.6108,1.2149],
        [1240.0,1.0,6.98357,5254.92,10.42,2.6219,1.2138],
        [1260.0,1.0,7.0759,5307.47,10.455,2.6328,1.2127],
        [1280.0,1.0,7.16822,5360.23,10.489,2.6436,1.2116],
        [1300.0,1.0,7.26055,5413.21,10.523,2.6541,1.2106],
        [1320.0,1.0,7.35287,5466.4,10.556,2.6645,1.2096],
        [1340.0,1.0,7.4452,5519.79,10.59,2.6748,1.2086],
        [1360.0,1.0,7.53752,5573.39,10.623,2.6848,1.2077],
        [1380.0,1.0,7.62985,5627.18,10.655,2.6947,1.2068],
        [1400.0,1.0,7.72217,5681.17,10.688,2.7044,1.2059],
        [1420.0,1.0,7.81449,5735.36,10.72,2.7139,1.205],
        [1440.0,1.0,7.90681,5789.73,10.752,2.7232,1.2042],
        [1460.0,1.0,7.99913,5844.28,10.784,2.7324,1.2033],
        [1480.0,1.0,8.09145,5899.02,10.815,2.7414,1.2025],
        [1500.0,1.0,8.18377,5953.94,10.846,2.7503,1.2018],
        [1550.0,1.0,8.41457,6091.99,10.923,2.7717,1.1999],
        [1600.0,1.0,8.64536,6231.1,10.998,2.7922,1.1981],
        [1650.0,1.0,8.87615,6371.2,11.072,2.8119,1.1965],
        [1700.0,1.0,9.10694,6512.27,11.145,2.8307,1.1949],
        [1750.0,1.0,9.33773,6654.26,11.216,2.8488,1.1934],
        [1800.0,1.0,9.56851,6797.14,11.285,2.8662,1.192],
        [1850.0,1.0,9.7993,6940.87,11.354,2.883,1.1907],
        [1900.0,1.0,10.0301,7085.43,11.421,2.8994,1.1894],
        [1950.0,1.0,10.2609,7230.8,11.487,2.9153,1.1882],
        [2000.0,1.0,10.4916,7376.95,11.552,2.9308,1.187],


        ];

        for dataset in steam_table {
            let t_deg_c = dataset[0];
            let p_bar = dataset[1];
            let v_m3_per_kg = dataset[2];
            let h_kj_per_kg = dataset[3];
            let s_kj_per_kg_k = dataset[4];
            let cp_kj_per_kg_k = dataset[5];
            let kappa_dimensionless = dataset[6];
            assert_pt_flash_high_temp(t_deg_c, p_bar, v_m3_per_kg, h_kj_per_kg, 
                s_kj_per_kg_k, cp_kj_per_kg_k, kappa_dimensionless, 
                );
        }

}
#[test]
pub fn single_phase_table_2_bar(){

    let steam_table: Vec<[f64; 7]> =
        vec![
        [800.0,2.0,2.47553,4159.76000,9.24790,2.34450,1.24550],
        [820.0,2.0,2.52175,4206.83000,9.29130,2.35920,1.24360],
        [840.0,2.0,2.56797,4254.14000,9.33420,2.37250,1.24190],
        [860.0,2.0,2.61418,4301.73000,9.37660,2.38590,1.24020],
        [880.0,2.0,2.66039,4349.58000,9.41840,2.39920,1.23860],
        [900.0,2.0,2.70659,4397.69000,9.45980,2.41250,1.23690],
        [920.0,2.0,2.75279,4446.08000,9.50070,2.42580,1.23530],
        [940.0,2.0,2.79899,4494.73000,9.54110,2.43900,1.23370],
        [960.0,2.0,2.84519,4543.64000,9.58110,2.45210,1.23220],
        [980.0,2.0,2.89139,4592.81000,9.62070,2.46520,1.23070],
        [1020.0,2.0,2.98377,4691.93000,9.69850,2.49100,1.22770],
        [1040.0,2.0,3.02996,4741.88000,9.73690,2.50370,1.22630],
        [1060.0,2.0,3.07615,4792.08000,9.77480,2.51620,1.22490],
        [1080.0,2.0,3.12234,4842.53000,9.81240,2.52870,1.22360],
        [1100.0,2.0,3.16852,4893.23000,9.84960,2.54090,1.22220],
        [1120.0,2.0,3.21470,4944.17000,9.88640,2.55310,1.22100],
        [1140.0,2.0,3.26089,4995.35000,9.92290,2.56500,1.21970],
        [1160.0,2.0,3.30707,5046.77000,9.95900,2.57680,1.21850],
        [1180.0,2.0,3.35325,5098.42000,9.99480,2.58840,1.21730],
        [1200.0,2.0,3.39942,5150.30000,10.03000,2.59990,1.21610],
        [1220.0,2.0,3.44560,5202.41000,10.06500,2.61110,1.21500],
        [1240.0,2.0,3.49178,5254.75000,10.10000,2.62220,1.21390],
        [1260.0,2.0,3.53795,5307.30000,10.13500,2.63320,1.21280],
        [1280.0,2.0,3.58413,5360.07000,10.16900,2.64390,1.21170],
        [1300.0,2.0,3.63030,5413.06000,10.20300,2.65450,1.21070],
        [1320.0,2.0,3.67647,5466.25000,10.23600,2.66480,1.20970],
        [1340.0,2.0,3.72265,5519.65000,10.27000,2.67510,1.20870],
        [1360.0,2.0,3.76882,5573.25000,10.30300,2.68510,1.20780],
        [1380.0,2.0,3.81499,5627.05000,10.33500,2.69490,1.20690],
        [1400.0,2.0,3.86116,5681.05000,10.36800,2.70460,1.20600],
        [1420.0,2.0,3.90733,5735.23000,10.40000,2.71410,1.20510],
        [1440.0,2.0,3.95350,5789.61000,10.43200,2.72350,1.20430],
        [1460.0,2.0,3.99966,5844.17000,10.46400,2.73260,1.20340],
        [1480.0,2.0,4.04583,5898.92000,10.49500,2.74170,1.20260],
        [1500.0,2.0,4.09200,5953.84000,10.52600,2.75050,1.20180],
        [1550.0,2.0,4.20741,6091.90000,10.60300,2.77190,1.20000],
        [1600.0,2.0,4.32282,6231.01000,10.67800,2.79240,1.19820],
        [1650.0,2.0,4.43823,6371.13000,10.75200,2.81210,1.19650],
        [1700.0,2.0,4.55364,6512.21000,10.82500,2.83090,1.19500],
        [1750.0,2.0,4.66905,6654.20000,10.89600,2.84890,1.19350],
        [1800.0,2.0,4.78445,6797.09000,10.96500,2.86630,1.19210],
        [1850.0,2.0,4.89985,6940.83000,11.03400,2.88320,1.19080],
        [1900.0,2.0,5.01525,7085.40000,11.10100,2.89950,1.18950],
        [1950.0,2.0,5.13065,7230.77000,11.16700,2.91540,1.18830],
        [2000.0,2.0,5.24605,7376.93000,11.23200,2.93090,1.18710],


        ];

        for dataset in steam_table {
            let t_deg_c = dataset[0];
            let p_bar = dataset[1];
            let v_m3_per_kg = dataset[2];
            let h_kj_per_kg = dataset[3];
            let s_kj_per_kg_k = dataset[4];
            let cp_kj_per_kg_k = dataset[5];
            let kappa_dimensionless = dataset[6];
            assert_pt_flash_high_temp(t_deg_c, p_bar, v_m3_per_kg, h_kj_per_kg, 
                s_kj_per_kg_k, cp_kj_per_kg_k, kappa_dimensionless, 
                );
        }

}
#[test]
pub fn single_phase_table_4_bar(){

    let steam_table: Vec<[f64; 7]> =
        vec![
        [800.00,4.00,1.23731,4158.85000,8.92730,2.34660,1.24570],
        [820.00,4.00,1.26046,4205.96000,8.97080,2.36120,1.24380],
        [840.00,4.00,1.28360,4253.31000,9.01370,2.37440,1.24210],
        [860.00,4.00,1.30673,4300.93000,9.05610,2.38770,1.24040],
        [880.00,4.00,1.32986,4348.82000,9.09800,2.40090,1.23880],
        [900.00,4.00,1.35299,4396.97000,9.13940,2.41410,1.23710],
        [920.00,4.00,1.37612,4445.38000,9.18030,2.42730,1.23550],
        [940.00,4.00,1.39924,4494.06000,9.22080,2.44040,1.23390],
        [960.00,4.00,1.42237,4543.00000,9.26080,2.45350,1.23240],
        [980.00,4.00,1.44548,4592.20000,9.30030,2.46650,1.23090],
        [1020.00,4.00,1.49172,4691.38000,9.37820,2.49220,1.22790],
        [1040.00,4.00,1.51483,4741.35000,9.41660,2.50480,1.22650],
        [1060.00,4.00,1.53794,4791.57000,9.45460,2.51730,1.22510],
        [1080.00,4.00,1.56105,4842.04000,9.49210,2.52970,1.22380],
        [1100.00,4.00,1.58416,4892.75000,9.52930,2.54190,1.22240],
        [1120.00,4.00,1.60727,4943.71000,9.56620,2.55400,1.22110],
        [1140.00,4.00,1.63037,4994.91000,9.60270,2.56590,1.21990],
        [1160.00,4.00,1.65348,5046.35000,9.63880,2.57770,1.21860],
        [1180.00,4.00,1.67658,5098.02000,9.67460,2.58930,1.21750],
        [1200.00,4.00,1.69968,5149.92000,9.71010,2.60070,1.21630],
        [1220.00,4.00,1.72278,5202.05000,9.74520,2.61190,1.21510],
        [1240.00,4.00,1.74588,5254.39000,9.78010,2.62300,1.21400],
        [1260.00,4.00,1.76898,5306.96000,9.81460,2.63390,1.21300],
        [1280.00,4.00,1.79208,5359.75000,9.84880,2.64460,1.21190],
        [1300.00,4.00,1.81518,5412.74000,9.88270,2.65510,1.21090],
        [1320.00,4.00,1.83827,5465.95000,9.91630,2.66550,1.20990],
        [1340.00,4.00,1.86137,5519.36000,9.94960,2.67570,1.20890],
        [1360.00,4.00,1.88446,5572.98000,9.98260,2.68570,1.20800],
        [1380.00,4.00,1.90756,5626.79000,10.01500,2.69550,1.20710],
        [1400.00,4.00,1.93065,5680.79000,10.04800,2.70520,1.20620],
        [1420.00,4.00,1.95374,5734.99000,10.08000,2.71460,1.20530],
        [1440.00,4.00,1.97684,5789.38000,10.11200,2.72400,1.20440],
        [1460.00,4.00,1.99993,5843.95000,10.14400,2.73310,1.20360],
        [1480.00,4.00,2.02302,5898.70000,10.17500,2.74210,1.20280],
        [1500.00,4.00,2.04611,5953.63000,10.20600,2.75090,1.20200],
        [1550.00,4.00,2.10383,6091.72000,10.28300,2.77230,1.20010],
        [1600.00,4.00,2.16156,6230.85000,10.35800,2.79280,1.19840],
        [1650.00,4.00,2.21927,6370.99000,10.43200,2.81240,1.19670],
        [1700.00,4.00,2.27699,6512.08000,10.50500,2.83120,1.19510],
        [1750.00,4.00,2.33471,6654.09000,10.57600,2.84920,1.19370],
        [1800.00,4.00,2.39242,6796.99000,10.64500,2.86660,1.19230],
        [1850.00,4.00,2.45013,6940.74000,10.71400,2.88340,1.19090],
        [1900.00,4.00,2.50784,7085.33000,10.78100,2.89970,1.18960],
        [1950.00,4.00,2.56555,7230.71000,10.84700,2.91560,1.18840],
        [2000.00,4.00,2.62326,7376.88000,10.91200,2.93110,1.18720],



        ];

        for dataset in steam_table {
            let t_deg_c = dataset[0];
            let p_bar = dataset[1];
            let v_m3_per_kg = dataset[2];
            let h_kj_per_kg = dataset[3];
            let s_kj_per_kg_k = dataset[4];
            let cp_kj_per_kg_k = dataset[5];
            let kappa_dimensionless = dataset[6];
            assert_pt_flash_high_temp(t_deg_c, p_bar, v_m3_per_kg, h_kj_per_kg, 
                s_kj_per_kg_k, cp_kj_per_kg_k, kappa_dimensionless, 
                );
        }

}

fn assert_pt_flash_high_temp(
    t_deg_c: f64,
    p_bar: f64,
    v_m3_per_kg: f64,
    h_kj_per_kg: f64,
    s_kj_per_kg_k: f64,
    cp_kj_per_kg_k: f64,
    kappa_dimensionless: f64,
){
    let p = Pressure::new::<bar>(p_bar);
    let t = ThermodynamicTemperature::new::<degree_celsius>(t_deg_c);
    let h_ref = AvailableEnergy::new::<kilojoule_per_kilogram>(h_kj_per_kg);
    // check if t is less than or equal to tsat 
    
    let t_sat = sat_temp_4(p);
    let fifty_kelvin = TemperatureInterval::new::<temperature_interval::kelvin>(50.0);
    
    let x: f64;
    
    if t > t_sat + fifty_kelvin {
        x = 1.0;
    } else {
        x = x_ph_flash(p, h_ref);
    };


    // assert h
    let h_test = h_tp_eqm_two_phase(t, p, x);
    approx::assert_relative_eq!(
        h_kj_per_kg,
        h_test.get::<kilojoule_per_kilogram>(),
        max_relative=2e-4
        );

    // assert volume to within 0.01%  (that's the tolerable error for 
    // backward eqn)
    let v_test = v_tp_eqm_two_phase(t, p, x);
    approx::assert_relative_eq!(
        v_m3_per_kg,
        v_test.get::<cubic_meter_per_kilogram>(),
        max_relative=1e-4
        );

    // now entropy 
    let s_test = s_tp_eqm_two_phase(t, p, x);
    approx::assert_relative_eq!(
        s_kj_per_kg_k,
        s_test.get::<kilojoule_per_kilogram_kelvin>(),
        max_relative=1e-3
        );

    // cp 
    let cp_test = cp_tp_eqm_two_phase(t, p, x);
    approx::assert_relative_eq!(
        cp_kj_per_kg_k,
        cp_test.get::<kilojoule_per_kilogram_kelvin>(),
        max_relative=1e-3
        );

    // kappa
    let kappa_test = kappa_tp_eqm_two_phase(t, p, x);
    approx::assert_relative_eq!(
        kappa_dimensionless,
        kappa_test.get::<ratio>(),
        max_relative=9e-3
        );

    // eta and lambda tbd



}




